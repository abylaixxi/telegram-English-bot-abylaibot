from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    filters, ContextTypes, ConversationHandler
)

ASK_GOAL, ASK_LEVEL, ASK_TIME = range(3)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["–î–∞", "–ù–µ—Ç"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üëã –†–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π —à–∫–æ–ª–µ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞.\n"
        "–•–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ?",
        reply_markup=reply_markup
    )
    return ASK_GOAL

async def ask_goal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    answer = update.message.text.lower()
    if answer == "–Ω–µ—Ç":
        await update.message.reply_text(
            "–•–æ—Ä–æ—à–æ, –µ—Å–ª–∏ –ø–æ—è–≤–∏—Ç—Å—è –∏–Ω—Ç–µ—Ä–µ—Å ‚Äî –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∞—Å –≤–∏–¥–µ—Ç—å! üòä",
            reply_markup=ReplyKeyboardRemove()
        )
        return ConversationHandler.END

    context.user_data['goal'] = answer
    keyboard = [["A1", "A2", "B1"], ["B2", "C1", "C2"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ –¥–ª–∏—Ç—Å—è 30 –º–∏–Ω—É—Ç –∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç –æ–Ω–ª–∞–π–Ω —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º.\n"
        "–û–Ω –ø–æ–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç —Å –Ω–∞—à–∏–º –ø–æ–¥—Ö–æ–¥–æ–º.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ:",
        reply_markup=reply_markup
    )
    return ASK_LEVEL

async def ask_level(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['level'] = update.message.text
    keyboard = [["–∑–∞–≤—Ç—Ä–∞ –≤ 18:00", "—á–µ—Ç–≤–µ—Ä–≥ –≤ 15:30"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text(
        "–û—Ç–ª–∏—á–Ω–æ! üòä –ö–æ–≥–¥–∞ –≤–∞–º —É–¥–æ–±–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –∑–∞–Ω—è—Ç–∏–µ?",
        reply_markup=reply_markup
    )
    return ASK_TIME

async def ask_time(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['time'] = update.message.text
    await update.message.reply_text(
        f"–°—É–ø–µ—Ä! –ó–∞–ø–∏—Å–∞–ª–∞ –≤–∞—Å –Ω–∞ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ {context.user_data['time']}.\n"
        "–ó–∞ 10 –º–∏–Ω—É—Ç –¥–æ –∑–∞–Ω—è—Ç–∏—è –ø—Ä–∏—à–ª—ë–º —Å—Å—ã–ª–∫—É –Ω–∞ Zoom üíª\n"
        "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äî –ø–∏—à–∏—Ç–µ, –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏! –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üåü",
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–∏–∞–ª–æ–≥ –æ—Ç–º–µ–Ω—ë–Ω. –ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /start.",
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END

def main():
    app = ApplicationBuilder().token("8170972261:AAETqGFSpGeMUZ8Wq9diCwrgXm3jGnd42-s").build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            ASK_GOAL: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_goal)],
            ASK_LEVEL: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_level)],
            ASK_TIME: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_time)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    app.run_polling()

if __name__ == "__main__":
    main()
